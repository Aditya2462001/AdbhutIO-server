# Generated by Django 3.2.12 on 2023-01-13 10:12

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import profiles.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('misc', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100)),
                ('profile_pic', models.ImageField(blank=True, default='avatar.png', upload_to=profiles.models.saveNameLocationForProfilePic)),
                ('languages', models.CharField(blank=True, default='', max_length=100)),
                ('age', models.IntegerField(default=0)),
                ('genre', models.CharField(blank=True, default='', max_length=100)),
                ('email', models.EmailField(blank=True, default='', max_length=100)),
                ('phone', models.IntegerField(blank=True, default=0)),
                ('other_arts', models.CharField(blank=True, default='', max_length=100)),
                ('social_links', models.CharField(blank=True, default='', max_length=200)),
                ('has_manager', models.BooleanField(blank=True, default=False)),
                ('budget_range', models.CharField(blank=True, choices=[('<10k', 'Less Than 10,000'), ('10k-20k', '10K - 20k'), ('20K - 40k', '20k-40k'), ('>40k', 'Above 40K')], default='Less Than 10,000', max_length=100)),
                ('budget_idea', models.TextField(blank=True, default='')),
                ('am_notes', models.TextField(blank=True, default='')),
                ('pm_notes', models.TextField(blank=True, default='')),
                ('professional_rating', models.IntegerField(default=0)),
                ('attitude_rating', models.IntegerField(default=0)),
                ('has_agreement', models.BooleanField(default=False)),
                ('agreement', models.FileField(blank=True, default='', upload_to=profiles.models.savenameLocationForAggreement)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='misc.location')),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=100)),
                ('details', models.TextField(blank=True, default='')),
                ('email', models.EmailField(blank=True, default='', max_length=254)),
                ('email_confirmed', models.BooleanField(default=False)),
                ('client_previous_payout', models.IntegerField(blank=True, default=0)),
                ('production_suggested_project_advance', models.FloatField(blank=True, default=0)),
                ('latest_project_advance', models.FloatField(blank=True, default=0)),
                ('latest_client_payout_status', models.CharField(blank=True, choices=[('In Progres', 'In Progress'), ('Done', 'Done')], default='', max_length=100)),
                ('total_client_payout', models.FloatField(blank=True, default=0)),
                ('contract_document_signing_status', models.CharField(blank=True, default='', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=100)),
                ('phone', models.IntegerField(default=0)),
                ('email', models.EmailField(blank=True, default='', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stage', models.CharField(blank=True, choices=[('Lead', 'Lead'), ('In Progress', 'In Progress'), ('Halt', 'Halt'), ('Finish', 'Finish')], default='', max_length=100)),
                ('brief', models.TextField(blank=True, default='')),
                ('production_solution', models.TextField(blank=True, default='')),
                ('comments', models.TextField(blank=True, default='')),
                ('post_project_client_feedback', models.TextField(blank=True, default='')),
                ('project_fee_Status', models.CharField(blank=True, choices=[('Unpaid', 'Unpaid'), ('Partially Paid', 'Partially Paid'), ('Paid', 'Paid')], default='', max_length=100)),
                ('contract_status', models.BooleanField(blank=True, default=False)),
                ('assigned_artists', models.ManyToManyField(blank=True, default='', related_name='project_AssignedArtist', to='profiles.Artist')),
                ('client', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='project_Artist', to='profiles.client')),
            ],
        ),
        migrations.CreateModel(
            name='Work',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100)),
                ('details', models.TextField(blank=True, default='')),
                ('weblink', models.URLField(blank=True, default='', max_length=100)),
                ('show_in_top_feed', models.BooleanField(default=False)),
                ('is_demo', models.BooleanField(default=False)),
                ('from_client', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('file', models.FileField(blank=True, default='', upload_to='work_files')),
                ('demo_type', models.CharField(blank=True, choices=[('Instagram Link', 'Instagram'), ('Youtube Link', 'Youtube'), ('Soundcloud Link', 'Soundcloud'), ('Image', 'Image'), ('Video', 'Video'), ('Other Document', 'Other')], default='', max_length=100)),
                ('owner', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='work_Artist', to='profiles.artist')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectFee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('solution_fee', models.FloatField(blank=True, default=0)),
                ('production_advance', models.FloatField(blank=True, default=0)),
                ('negotiated_advance', models.FloatField(blank=True, default=0)),
                ('final_advance', models.FloatField(blank=True, default=0)),
                ('advance_status', models.CharField(blank=True, choices=[('In Progress', 'In Progress'), ('Done', 'Done')], default='', max_length=100)),
                ('artist_payout_status', models.CharField(choices=[('In Progress', 'In Progress'), ('Done', 'Done')], default='', max_length=100)),
                ('final_fee_settlement_status', models.BooleanField(blank=True, default=False)),
                ('post_project_client_total_payout', models.FloatField(blank=True, default=0)),
                ('project_fee_Status', models.CharField(blank=True, choices=[('Unpaid', 'Unpaid'), ('Partially Paid', 'Partially Paid'), ('Paid', 'Paid')], default='', max_length=100)),
                ('assigned_artist_payouts', models.ManyToManyField(default='', to='profiles.Artist')),
                ('client', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ProjectFee_to_client_relation', to='profiles.client')),
                ('project', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ProjectFee_to_Project_relation', to='profiles.project')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectDemo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, default='')),
                ('status', models.CharField(blank=True, choices=[('Selected', 'Selected'), ('Shortlisted', 'Shortlisted'), ('Rejected', 'Rejected')], default='', max_length=100)),
                ('artist', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='projectdemo_Artist', to='profiles.artist')),
                ('demo_work', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='projectdemo_DemoWork', to='profiles.work')),
                ('project', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='projectdemo_Project', to='profiles.project')),
            ],
        ),
        migrations.AddField(
            model_name='project',
            name='project_demos',
            field=models.ManyToManyField(blank=True, default='', related_name='project_ProjectDemo', to='profiles.ProjectDemo'),
        ),
        migrations.AddField(
            model_name='project',
            name='shortlisted_artists',
            field=models.ManyToManyField(blank=True, default='', related_name='project_shortlistedArtist', to='profiles.Artist'),
        ),
        migrations.AddField(
            model_name='project',
            name='showcase_demos',
            field=models.ManyToManyField(blank=True, default='', to='profiles.Work'),
        ),
        migrations.AddField(
            model_name='client',
            name='projects',
            field=models.ManyToManyField(blank=True, default='', related_name='client_projects', to='profiles.Project'),
        ),
        migrations.AddField(
            model_name='client',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ArtistRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre', models.CharField(blank=True, default='', max_length=100)),
                ('language', models.CharField(blank=True, default='', max_length=100)),
                ('other_performin_arts', models.TextField(blank=True, default='')),
                ('budget_range', models.CharField(blank=True, default='', max_length=100)),
                ('budget_idea', models.TextField(blank=True, default='')),
                ('production_hiring', models.IntegerField(blank=True, default=0)),
                ('service_hiring', models.IntegerField(blank=True, default=0)),
                ('target', models.IntegerField(blank=True, default=0)),
                ('comments', models.TextField(blank=True, default='')),
                ('hiring_status', models.CharField(blank=True, choices=[('In Progress', 'In Progress'), ('Done', 'Done')], default='', max_length=100)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='artistrequest_Location', to='misc.location')),
                ('project', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ArtistRequest_to_Project_relation', to='profiles.project')),
                ('rejected_artists', models.ManyToManyField(default='', related_name='artistrequest_RejectedArtist', to='profiles.Artist')),
                ('shortlisted_artists', models.ManyToManyField(default='', related_name='artistrequest_ShortlistedArtist', to='profiles.Artist')),
                ('skill', models.ManyToManyField(blank=True, default='', related_name='artistrequest_Skill', to='misc.Skill')),
            ],
        ),
        migrations.CreateModel(
            name='ArtistFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pre_project_feedbace', models.TextField(blank=True, default='')),
                ('on_project_feedback', models.TextField(blank=True, default='')),
                ('post_project_feedback', models.TextField(blank=True, default='')),
                ('artist', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='artistfeedback_Artist', to='profiles.artist')),
            ],
        ),
        migrations.AddField(
            model_name='artist',
            name='manager',
            field=models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='artist_to_Manager_relation', to='profiles.manager'),
        ),
        migrations.AddField(
            model_name='artist',
            name='skill',
            field=models.ManyToManyField(blank=True, default='', to='misc.Skill'),
        ),
        migrations.AddField(
            model_name='artist',
            name='works_links',
            field=models.ManyToManyField(blank=True, default='', to='profiles.Work'),
        ),
    ]
